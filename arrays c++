//initialising arrays
//hw q1
int main(){
    int arr[100000];
    for(int i=0;i<10000;i++){
        arr[i]=-24;
    }
}
//maxm and minm of array

// Online C++ compiler to run C++ program online
#include <iostream>
#include<climits>
using namespace std; 
int minArray(int array[],int n){
    int min=INT_MAX;
     for(int i=0;i<n;i++){
        if(array[i]<min){
            min=array[i];
        }
    }
    return min;
}

int maxArray(int array[],int n){
    int max= INT_MIN;
    for(int i=0;i<n;i++){
        if(array[i]>max){
            max=array[i];
        }
//alternate way to find max of an array
       // maxi = max(maxi,array[i]);
    }
    return max;
}
int main() {
    // Write C++ code here
    
    int arr[100];
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    
    minArray(arr,n);
    cout<<minArray(arr,n)<<endl;
 
    maxArray(arr,n);
    cout<<maxArray(arr,n)<<endl;
    
    
}
//sum of elements in arrays
#include <iostream>
#include<climits>
using namespace std; 
int main(){
    int arr[100];
    int size;
    cin>>size;
    for(int i=0;i<size;i++){
        cin>>arr[i];
    }
    //sum of array
    int sum=0;
    for(int j=0;j<size;j++){
        sum = sum + arr[j];
    }
    cout<<sum;
}
//linear search for an array
#include <iostream>
#include<climits>
using namespace std;
bool search(int arr[],int n,int key){
    for(int i=0;i<n;i++){
        if(arr[i]==key){
            return 1;
        }
    }
    return 0;
}

int main(){
    int array[100],size,key;
    cin>>size;
    for(int i=0;i<size;i++){
        cin>>array[i];
    }
    cout<<"choose key";
    cin>>key;
    search(array,size,key);
    cout<<search(array,size,key);
}

//reversing the arrays
#include <iostream>
#include <climits>
using namespace std;
int main(){
    //reversing contents of array
   /* int arr[4]={14,143,69,420};
    int revarr[4];
    
    for(int i=0;i<4;i++){
        revarr[4-1-i]=arr[i];
    }
    
    for(int j=0;j<4;j++){
        cout<<revarr[j]<<" ";
    }*/
    int size;
    int arr[size];
    int revarr[size];
    
    cin>>size;
    //taking values into array
    for(int i=0;i<size;i++){
        cin>>arr[i];
    }
    
    for(int j=0;j<size;j++){
        revarr[size-1-j]=arr[j];
    }
    
    for(int k=0;k<size;k++){
        cout<<revarr[k]<<" ";
    }
}
//another method for reversing an array without using another variable
#include <iostream>
#include <climits>
using namespace std;
void revArray(int arr[],int n){
   
    int start=0,end=n-1,temp;
    while(start<=end){//most important part of code btw this is the main logic to this problem.
        swap(arr[start],arr[end]);
        start++;
        end--;
    }
}
void printArray(int arr[],int n){ 
    for(int j=0;j<n;j++){
        cout<<arr[j]<<" ";
    }
    
}

int main(){
    int array[5]={14,20,18,34,8};
    
    revArray(array,5);
    printArray(array,5);
}
//swap alternate elements array
#include <iostream>
#include <climits>
using namespace std;
//swap alternate in arrays
void swapAlt(int arr[],int n){
        for(int i=0;i<n;i=i+2){
             if(i+1<n){
                swap(arr[i],arr[i+1]);
        }
}
void printArray(int arr[],int n){ 
    for(int j=0;j<n;j++){
        cout<<arr[j]<<" ";
    }
}
int main(){
    int array[6]={14,20,18,34,8,32};
    
    swapAlt(array,6);
    printArray(array,6);
}
//find unique array:
xor with elements to cancel elements and find unique element
#include <iostream>
using namespace std; 
int main() {
    // Write C++ code here
    int ans=0,arr[100];
    int n;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    for(int i=0;i<n;i++){
        ans=ans^arr[i];
    }
    cout <<ans;
//0^a = a; a^a=0. by this method we can cancel same numbers
    return 0;
}
//another method, same question
#include <iostream>
using namespace std; 
int main() {
    // Write C++ code here
    int n;
    int arr[5];
    int count[100]={0};
    //findUnique
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            if(arr[i]== arr[j] && i!=j){
                count[i]=arr[i];
                count[j]=arr[j];
            }
        }
    }
    
    for(int i=0;i<n;i++){
        if(count[i]!=arr[i]){
            cout<<arr[i]<<endl;
        }
    }
}
//leetcode q.1207
#include <iostream>
using namespace std; 
int main() {
    // Write C++ code here
    int n;
    int arr[100];
    int count[100]={0};
    int k[100]={0};
    //findUnique
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    
    for(int i=0;i<n;i++){
        if(count[arr[i]]>1){
            continue;
        }
        for(int j=i;j<n;j++){
            if(arr[i]== arr[j] && i!=j){
                count[arr[i]]++;
            }
        }
    
    }
    
    for(int i=0;i<n;i++){
      
        cout<<arr[i]<<" "<<count[arr[i]]+1<<endl;
        
    }
    
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            
        
        if(count[arr[i]]==count[arr[j]]&& i!=j&&arr[i]!=arr[j]){
            cout<<"false";
            goto exit1;
        }
        
        }
    }
    cout<<"true";
    exit1:
    int l=0;
    
}
//find duplicate number
#include <iostream>
using namespace std; 
int main() {
    // find duplicate
    //1st method
    /*int arr1[100],arr2[100],n,ans=0;
    cin>>n;
    
    for(int i=0;i<n;i++){
        cin>>arr1[i];
    }
    
    for(int i=0;i<n;i++){
        ans=ans^arr1[i];                    
    }
    
    for(int i=1;i<n;i++){
        ans=ans^i;
    }
  
  cout<<ans;
    */
    //2nd method
  /*  int arr[100],n;
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            if(arr[i]==arr[j] && i!=j){
                cout<<arr[i];
                
            }
        }
    }
    */
    
    
}
